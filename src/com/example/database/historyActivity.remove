package com.example.database;

import static com.example.database.Constant.FIRST_COLUMN;
import static com.example.database.Constant.FOURTH_COLUMN;
import static com.example.database.Constant.SECOND_COLUMN;
import static com.example.database.Constant.THIRD_COLUMN;

import java.io.File;
import java.io.FileOutputStream;
import java.io.FileWriter;
import java.io.IOException;
import java.io.StringWriter;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;

import org.xmlpull.v1.XmlSerializer;

import android.app.Activity;
import android.app.ActivityGroup;
import android.app.Dialog;
import android.content.Context;
import android.content.Intent;
import android.os.Bundle;
import android.os.Environment;
import android.os.Message;
//import android.os.Message;
import android.util.Xml;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.AdapterView;
import android.widget.EditText;
import android.widget.ImageButton;
import android.widget.ListView;
import android.widget.AdapterView.OnItemClickListener;

public class historyActivity extends ActivityGroup implements OnItemClickListener{
	
	final Context context = this;
	static Context lastContext;
	private ArrayList<HashMap> list;
	private List<productHistory> products;

	

	@Override
	public void onItemClick(AdapterView<?> parent, View view, int position,
			long id) {
		// TODO Auto-generated method stub
		
	}
	
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		super.onCreate(savedInstanceState);
		
		//products.clear();
		
		setContentView(R.layout.history_menu_layout);
		
		ListView lview = (ListView) findViewById(R.id.listView_historyList);
		populateList();
        
        historyListviewAdapter adapter = new historyListviewAdapter(this, list);
        lview.setAdapter(adapter);
        
       
       
       lview.setOnItemClickListener(this); 
            
	}
	
	
	
	public void populateList() {
	 	   
        list = new ArrayList<HashMap>();
        
        historyDBHandler dbHandler = new historyDBHandler(this, null, null, 1);
        
        int _productCount = dbHandler.getTableCount();
        
        for (int i = 0; i < _productCount; i++)
        {
     	   productHistory theProduct = dbHandler.getProducts(i);
     	   HashMap temp = new HashMap();
     	   
            temp.put(FIRST_COLUMN, theProduct.getProductName());
            temp.put(SECOND_COLUMN, theProduct.getQuantity());
            temp.put(THIRD_COLUMN, theProduct.getDateTime());
            temp.put(FOURTH_COLUMN, theProduct.getChangeType());
           
        list.add(temp);   
        }
	}
	
	public void clearHistory(View view)
	{
		historyDBHandler dbHandler = new historyDBHandler(this, null, null, 1);
		dbHandler.deleteTable();
		updateList();
	}
	
	public void refreshHistory(View view)
	{
		updateList();
	}
	
	public void updateList()
	{
		ListView lview = (ListView) findViewById(R.id.listView_historyList);
		populateList();
        historyListviewAdapter adapter = new historyListviewAdapter(this, list);
        lview.setAdapter(adapter);
	}
	
	public void exportXML(View view)
	{
		System.out.println("open the export dialog");
		SimpleDateFormat dateFormat = new SimpleDateFormat("yyyy-MM-dd"); 
		Date date = new Date();
		String theDate = dateFormat.format(date).toString();
		dialogExportFile("invHistory-"+theDate);
	}
		
	public void saveToXML(String fileName) throws IOException
	{		
		products = new ArrayList<productHistory>();
		historyDBHandler dbHandler = new historyDBHandler(this, null, null, 1);
		int _productCount = dbHandler.getTableCount();
		for (int i = 0; i < _productCount; i++)
        {
     	   productHistory theProduct = dbHandler.getProducts(i);
     	   products.add(theProduct);
        }
		
		File root = Environment.getExternalStorageDirectory();
		System.out.println("sd card is here: " + root);
		FileOutputStream f = new FileOutputStream(new File(root, fileName +".xml"));
		System.out.println("wrote file " + fileName + ".xml");
		//FileWriter f = new FileWriter("/mnt/genydroidSD/historyExports/history.xml");
		
		f.write(writeXml(products).getBytes()); 
		f.flush();
		f.close();
	}
	
	private String writeXml(List<productHistory> products){
	    XmlSerializer serializer = Xml.newSerializer();
	    StringWriter writer = new StringWriter();
	    try {
	        serializer.setOutput(writer);
	        serializer.startDocument("UTF-8", true);
	        serializer.text("\n");
	        serializer.startTag("", "change history");
	        serializer.text("\n");
	        
	        for (productHistory msg: products){
	            serializer.startTag("", "change");
	            serializer.attribute("", "date", msg.getDateTime());
	            serializer.attribute("", "name", msg.getProductName());
	            serializer.attribute("", "changedValue", String.valueOf(msg.getQuantity()));
	            serializer.attribute("", "changeType", msg.getChangeType());
	            serializer.endTag("", "change");
	            serializer.text("\n");
	        }
	        serializer.endTag("", "change history");
	        serializer.endDocument();
	        return writer.toString();
	    } catch (Exception e) {
	        throw new RuntimeException(e);
	    } 
	}
	
	public void gotoAdvanced(View view)
	{
		Intent intent;
		intent = new Intent().setClass(this, AdvancedActivity.class);
		//AdvancedActivity.lastContext = lastContext;
		replaceActivity("AdvancedActivity", intent);
	}
	public void replaceActivity(String id, Intent newIntent)
	{
		View view = getLocalActivityManager().startActivity(id,newIntent.addFlags(Intent.FLAG_ACTIVITY_CLEAR_TOP)) .getDecorView(); this.setContentView(view);
	}
	
	public void dialogExportFile(String name)
	{
		final Dialog dialog = new Dialog(lastContext);
  	  	dialog.setContentView(R.layout.dialog_export);
  	  	dialog.setTitle("Export History as XML?");
  	  	dialog.show();
  	  
	  	  ImageButton cancel = (ImageButton) dialog.findViewById(R.id.button_cancel);
		  ImageButton ok = (ImageButton) dialog.findViewById(R.id.button_ok);
		  
		  EditText fileName = (EditText) dialog.findViewById(R.id.editText_fileName);
		  fileName.setText(name);
		  
		  
		  final String theName = fileName.getText().toString();
		  
		  cancel.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					dialog.dismiss();
				}
			});
		  
		  ok.setOnClickListener(new OnClickListener() {
				@Override
				public void onClick(View v) {
					try {
						saveToXML(theName);
						dialog.dismiss();
					} catch (IOException e) {
						// TODO Auto-generated catch block
						e.printStackTrace();
					}
				}
		  });
		  
		  dialog.show();
		
	}

}
