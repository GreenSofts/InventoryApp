package com.example.database;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import android.app.Activity;
import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.BaseExpandableListAdapter;
import android.widget.ExpandableListAdapter;
import android.widget.TextView;
/**
 * this class is un-used and not needed
 * @author nate
 *
 */
public class expandableListAdapter extends BaseExpandableListAdapter{

	private Activity context;
	private Map<String, List<String>> theMap;
	public ArrayList<HashMap> theList;
	
	public expandableListAdapter(Activity context, ArrayList<HashMap> theList,
			Map<String, List<String>> theMap)
	{
		this.context = context;
		this.theMap = theMap;
		this.theList = theList;
	}
	
	public Object getChild(int groupPosition, int childPosition)
	{
		return theMap.get(theList.get(groupPosition)).get(childPosition);
	}
	
	public long getChildId(int groupPosition, int childPosition)
	{
		return childPosition;
	}
	
	public View getChildView(final int groupPosition, final int childPosition,
			boolean isLastChild, View convertView, ViewGroup parent)
	{
		final String product = (String) getChild(groupPosition, childPosition);
		LayoutInflater inflater = context.getLayoutInflater();
		
		if (convertView == null)
		{
			convertView = inflater.inflate(R.layout.tobuy_list, null);
		}
		return convertView;
	}
	
	public int getChildrenCount(int groupPosition)
	{
		return theMap.get(theList.get(groupPosition)).size();
	}
	
	public Object getGroup(int groupPosition)
	{
		return theList.get(groupPosition);
	}
	
	public int getGroupCount()
	{
		return theList.size();
	}
	
	public long getGroupId(int groupPosition)
	{
		return groupPosition;
	}
	
	public View getGroupView(int groupPosition, boolean isExpanded,
			View convertView, ViewGroup parent)
	{
		return convertView;
	}
	
	public boolean hasStableIds()
	{
		return true;
	}
	
	public boolean isChildSelectable(int groupPosition, int childPosition)
	{
		return true;
	}

}
